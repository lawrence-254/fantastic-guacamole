"use strict";

// just pre-load all the stuff that index.js lazily exports
var internalRe = require('./internal/re');

var constants = require('./internal/constants');

var SemVer = require('./classes/semver');

var identifiers = require('./internal/identifiers');

var parse = require('./functions/parse');

var valid = require('./functions/valid');

var clean = require('./functions/clean');

var inc = require('./functions/inc');

var diff = require('./functions/diff');

var major = require('./functions/major');

var minor = require('./functions/minor');

var patch = require('./functions/patch');

var prerelease = require('./functions/prerelease');

var compare = require('./functions/compare');

var rcompare = require('./functions/rcompare');

var compareLoose = require('./functions/compare-loose');

var compareBuild = require('./functions/compare-build');

var sort = require('./functions/sort');

var rsort = require('./functions/rsort');

var gt = require('./functions/gt');

var lt = require('./functions/lt');

var eq = require('./functions/eq');

var neq = require('./functions/neq');

var gte = require('./functions/gte');

var lte = require('./functions/lte');

var cmp = require('./functions/cmp');

var coerce = require('./functions/coerce');

var Comparator = require('./classes/comparator');

var Range = require('./classes/range');

var satisfies = require('./functions/satisfies');

var toComparators = require('./ranges/to-comparators');

var maxSatisfying = require('./ranges/max-satisfying');

var minSatisfying = require('./ranges/min-satisfying');

var minVersion = require('./ranges/min-version');

var validRange = require('./ranges/valid');

var outside = require('./ranges/outside');

var gtr = require('./ranges/gtr');

var ltr = require('./ranges/ltr');

var intersects = require('./ranges/intersects');

var simplifyRange = require('./ranges/simplify');

var subset = require('./ranges/subset');

module.exports = {
  parse: parse,
  valid: valid,
  clean: clean,
  inc: inc,
  diff: diff,
  major: major,
  minor: minor,
  patch: patch,
  prerelease: prerelease,
  compare: compare,
  rcompare: rcompare,
  compareLoose: compareLoose,
  compareBuild: compareBuild,
  sort: sort,
  rsort: rsort,
  gt: gt,
  lt: lt,
  eq: eq,
  neq: neq,
  gte: gte,
  lte: lte,
  cmp: cmp,
  coerce: coerce,
  Comparator: Comparator,
  Range: Range,
  satisfies: satisfies,
  toComparators: toComparators,
  maxSatisfying: maxSatisfying,
  minSatisfying: minSatisfying,
  minVersion: minVersion,
  validRange: validRange,
  outside: outside,
  gtr: gtr,
  ltr: ltr,
  intersects: intersects,
  simplifyRange: simplifyRange,
  subset: subset,
  SemVer: SemVer,
  re: internalRe.re,
  src: internalRe.src,
  tokens: internalRe.t,
  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,
  RELEASE_TYPES: constants.RELEASE_TYPES,
  compareIdentifiers: identifiers.compareIdentifiers,
  rcompareIdentifiers: identifiers.rcompareIdentifiers
};