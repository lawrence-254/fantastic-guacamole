"use strict";

var fs = require('../fs.js');

var getOptions = require('../common/get-options.js');

var node = require('../common/node.js');

var polyfill = require('./polyfill.js'); // node 14.14.0 added fs.rm, which allows both the force and recursive options


var useNative = node.satisfies('>=14.14.0');

var rm = function rm(path, opts) {
  var options;
  return regeneratorRuntime.async(function rm$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          options = getOptions(opts, {
            copy: ['retryDelay', 'maxRetries', 'recursive', 'force']
          }); // the polyfill is tested separately from this module, no need to hack
          // process.version to try to trigger it just for coverage
          // istanbul ignore next

          return _context.abrupt("return", useNative ? fs.rm(path, options) : polyfill(path, options));

        case 2:
        case "end":
          return _context.stop();
      }
    }
  });
};

module.exports = rm;