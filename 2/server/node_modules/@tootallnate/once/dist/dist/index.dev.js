"use strict";

function noop() {}

function once(emitter, name) {
  var o = once.spread(emitter, name);
  var r = o.then(function (args) {
    return args[0];
  });
  r.cancel = o.cancel;
  return r;
}

(function (once) {
  function spread(emitter, name) {
    var c = null;
    var p = new Promise(function (resolve, reject) {
      function cancel() {
        emitter.removeListener(name, onEvent);
        emitter.removeListener('error', onError);
        p.cancel = noop;
      }

      function onEvent() {
        cancel();

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        resolve(args);
      }

      function onError(err) {
        cancel();
        reject(err);
      }

      c = cancel;
      emitter.on(name, onEvent);
      emitter.on('error', onError);
    });

    if (!c) {
      throw new TypeError('Could not get `cancel()` function');
    }

    p.cancel = c;
    return p;
  }

  once.spread = spread;
})(once || (once = {}));

module.exports = once;